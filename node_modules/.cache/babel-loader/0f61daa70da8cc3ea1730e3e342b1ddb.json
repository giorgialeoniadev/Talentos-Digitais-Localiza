{"ast":null,"code":"var _jsxFileName = \"/Users/giorgia/Trybe/sd-02-week12-movie-card-library-stateful/src/components/MovieLibrary.jsx\";\nimport React, { Component } from 'react';\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\n\nclass MovieLibrary extends Component {\n  constructor(props) {\n    super(props);\n    const movies = this.props.movies;\n    this.setSearchedText = this.setSearchedText.bind(this);\n    this.setBookMarkedOnly = this.setBookMarkedOnly.bind(this);\n    this.setSelectedGenre = this.setSelectedGenre.bind(this);\n    this.onClickAddMovie = this.onClickAddMovie.bind(this);\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies\n    };\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  onClickAddMovie(newMovie) {\n    const movies = this.state.movies;\n    this.setState({\n      movies: [...movies, newMovie]\n    });\n  }\n\n  setSearchedText(event) {\n    this.setState({\n      searchText: event.target.value\n    });\n  }\n\n  setBookMarkedOnly(event) {\n    this.setState({\n      bookmarkedOnly: event.target.checked\n    });\n  }\n\n  setSelectedGenre(event) {\n    this.setState({\n      selectedGenre: event.target.value\n    });\n  }\n\n  filterBookMarkedMovies(movies) {\n    const bookmarkedOnly = this.state.bookmarkedOnly;\n\n    if (bookmarkedOnly === true) {\n      return movies.filter(movie => movie.bookmarked === true);\n    }\n\n    return movies;\n  }\n\n  filterByGenre(movies) {\n    const selectedGenre = this.state.selectedGenre;\n\n    if (selectedGenre !== '') {\n      return movies.filter(movie => movie.genre === selectedGenre);\n    }\n\n    return movies;\n  }\n\n  filterBySearch(movies) {\n    const searchText = this.state.searchText;\n    const lowerCaseSearchText = searchText.toLowerCase();\n\n    if (searchText !== '') {\n      return movies.filter(movie => {\n        const title = movie.title,\n              subtitle = movie.subtitle,\n              storyline = movie.storyline;\n        const lowerCaseTitle = title.toLowerCase();\n        const lowerCaseSubtitle = subtitle.toLowerCase();\n        const lowerCaseStoryline = storyline.toLowerCase();\n        return lowerCaseTitle.includes(lowerCaseSearchText) || lowerCaseSubtitle.includes(lowerCaseSearchText) || lowerCaseStoryline.includes(lowerCaseSearchText);\n      });\n    }\n\n    return movies;\n  }\n\n  filterMovies(movies) {\n    const bookmarkedMovies = this.filterBookMarkedMovies(movies);\n    const genrefied = this.filterByGenre(bookmarkedMovies);\n    const searched = this.filterBySearch(genrefied);\n    return searched;\n  }\n\n  render() {\n    const _this$state = this.state,\n          searchText = _this$state.searchText,\n          bookmarkedOnly = _this$state.bookmarkedOnly,\n          selectedGenre = _this$state.selectedGenre,\n          movies = _this$state.movies;\n    const filteredMovies = this.filterMovies(movies);\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \" My awesome movie library \"), React.createElement(SearchBar, {\n      searchText: searchText,\n      onSearchTextChange: this.setSearchedText,\n      bookmarkedOnly: bookmarkedOnly,\n      onBookmarkedChange: this.setBookMarkedOnly,\n      selectedGenre: selectedGenre,\n      onSelectedGenreChange: this.setSelectedGenre,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(MovieList, {\n      movies: filteredMovies,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(AddMovie, {\n      onClickAddMovie: this.onClickAddMovie,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MovieLibrary;","map":{"version":3,"sources":["/Users/giorgia/Trybe/sd-02-week12-movie-card-library-stateful/src/components/MovieLibrary.jsx"],"names":["React","Component","MovieList","SearchBar","AddMovie","MovieLibrary","constructor","props","movies","setSearchedText","bind","setBookMarkedOnly","setSelectedGenre","onClickAddMovie","state","searchText","bookmarkedOnly","selectedGenre","newMovie","setState","event","target","value","checked","filterBookMarkedMovies","filter","movie","bookmarked","filterByGenre","genre","filterBySearch","lowerCaseSearchText","toLowerCase","title","subtitle","storyline","lowerCaseTitle","lowerCaseSubtitle","lowerCaseStoryline","includes","filterMovies","bookmarkedMovies","genrefied","searched","render","filteredMovies"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\n\nclass MovieLibrary extends Component {\n  constructor(props) {\n    super(props);\n\n    const { movies } = this.props;\n    this.setSearchedText = this.setSearchedText.bind(this);\n    this.setBookMarkedOnly = this.setBookMarkedOnly.bind(this);\n    this.setSelectedGenre = this.setSelectedGenre.bind(this);\n    this.onClickAddMovie = this.onClickAddMovie.bind(this);\n\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies,\n    };\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  onClickAddMovie(newMovie) {\n    const { movies } = this.state;\n    this.setState({movies: [...movies, newMovie]});\n  }\n\n  setSearchedText(event) {\n    this.setState({ searchText: event.target.value });\n  }\n\n  setBookMarkedOnly(event) {\n    this.setState({ bookmarkedOnly: event.target.checked });\n  }\n\n  setSelectedGenre(event) {\n    this.setState({ selectedGenre: event.target.value });\n  }\n\n  filterBookMarkedMovies(movies) {\n    const { bookmarkedOnly } = this.state;\n    if (bookmarkedOnly === true) {\n      return movies.filter((movie) => movie.bookmarked === true);\n    }\n    return movies;\n  }\n\n  filterByGenre(movies) {\n    const { selectedGenre } = this.state;\n    if (selectedGenre !== '') {\n      return movies.filter((movie) => movie.genre === selectedGenre);\n    }\n    return movies;\n  }\n\n  filterBySearch(movies) {\n    const { searchText } = this.state;\n    const lowerCaseSearchText = searchText.toLowerCase();\n    if (searchText !== '') {\n      return movies.filter((movie) => {\n        const { title, subtitle, storyline } = movie;\n        const lowerCaseTitle = title.toLowerCase();\n        const lowerCaseSubtitle = subtitle.toLowerCase();\n        const lowerCaseStoryline = storyline.toLowerCase();\n\n        return lowerCaseTitle.includes(lowerCaseSearchText)\n          || lowerCaseSubtitle.includes(lowerCaseSearchText)\n          || lowerCaseStoryline.includes(lowerCaseSearchText);\n      });\n    }\n    return movies;\n  }\n\n  filterMovies(movies) {\n    const bookmarkedMovies = this.filterBookMarkedMovies(movies);\n    const genrefied = this.filterByGenre(bookmarkedMovies);\n    const searched = this.filterBySearch(genrefied);\n\n    return searched;\n  }\n\n  render() {\n    const { searchText, bookmarkedOnly, selectedGenre, movies } = this.state;\n    const filteredMovies = this.filterMovies(movies);\n    return (\n      <section>\n        <h2> My awesome movie library </h2>\n        <SearchBar\n          searchText={searchText}\n          onSearchTextChange={this.setSearchedText}\n          bookmarkedOnly={bookmarkedOnly}\n          onBookmarkedChange={this.setBookMarkedOnly}\n          selectedGenre={selectedGenre}\n          onSelectedGenreChange={this.setSelectedGenre}\n        />\n        <MovieList movies={filteredMovies} />\n        <AddMovie onClickAddMovie={this.onClickAddMovie} />\n      </section>\n    );\n  }\n}\n\nexport default MovieLibrary;\n"]},"metadata":{},"sourceType":"module"}